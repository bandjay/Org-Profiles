import pandas as pdimport osimport resnow_workforce_map={    'case_id':'CaseID',	'activity':'Activity',	'timestamp':'Timestamp',    'resource':'Actor',    'group_full':'inc_assignment_group',    'ct':'inc_category',	    'at':'inc_subcategory',    'case_start':'inc_opened_at',    'case_end':'inc_closed_at' }def mask_column(col):    #col=snow_df[::]['resource']    uniq_vals=col.unique()    mask_dict={k:str('id_')+str(i) for i,k in enumerate(uniq_vals)}    return [mask_dict[i] for i in col]    def convert_time_format(df):    #df=snow_df[::]    df['timestamp'] = pd.to_datetime(df['timestamp'], format='%Y-%m-%d %H:%M:%S').dt.strftime('%d/%m/%Y %H:%M:%S')    df['case_start'] = pd.to_datetime(df['case_start'], format='%Y-%m-%d %H:%M:%S').dt.strftime('%d/%m/%Y %H:%M:%S')    df['case_end'] = pd.to_datetime(df['case_end'], format='%Y-%m-%d %H:%M:%S').dt.strftime('%d/%m/%Y %H:%M:%S')    return dfdef process_df(df):    #df=snow_df[::]    df['date']=pd.to_datetime(df['timestamp'], format='%Y-%m-%d %H:%M:%S').dt.strftime('%d/%m/%Y')    df['tt'] = [d[:3] for d in pd.to_datetime(df['timestamp']).dt.day_name()]     df['case_duration_days']=[round(i/24,3) for i in (pd.to_datetime(df['case_end'])-pd.to_datetime(df['case_start'])) /  pd.Timedelta(hours=1) ]    df['group']=[s.split(" ")[0] for s in df['group_full']]    df['resource']=mask_column(df['resource'])    df=df.fillna('Missing')    return dfpwd=os.getcwd()data_file=os.path.join(pwd,"snow","snow_pmi_updated_monthly.csv")snow_df=pd.read_csv(data_file)[:1000]snow_df=snow_df[list(snow_workforce_map.values())]snow_df.columns=list(snow_workforce_map.keys())snow_df=process_df(snow_df)snow_df=convert_time_format(snow_df)os.chdir(os.path.join(pwd,"snow"))snow_df.to_csv('snow_wf.csv')os.chdir(pwd)